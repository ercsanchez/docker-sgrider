# CICD IMPLEMENTATION USING GITHUB ACTIONS & DIGITAL OCEAN

name: Deploy Frontend

on:
  workflow_dispatch:
  push:
    branches: [main, 07-cicd-gh-actions-do, 10-ci-multi-images]

jobs:
  # build docker image, use image to run test
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Docker build for tests
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react-test -f ./complex/client/Dockerfile.dev ./complex/client
      # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      # no need to login to docker hub here
      # add build scripts here for other images, if they have tests
      - name: Run tests using built image
        run: |
          docker run -e CI=true ${{ secrets.DOCKER_USERNAME }}/react-test npm run test

  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Docker build for production
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-client ./complex/client
          docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-nginx ./complex/nginx
          docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-server ./complex/server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/multi-worker ./complex/worker
      - name: Push images to Docker hub
        run : |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/multi-client
          docker push ${{ secrets.DOCKER_USERNAME }}/multi-nginx
          docker push ${{ secrets.DOCKER_USERNAME }}/multi-server
          docker push ${{ secrets.DOCKER_USERNAME }}/multi-worker
      # docker logout # no need to logout docker hub before logging in with ghcr.io
      - name: Push images to Github Container Registry (ghcr.io)
        run: |
          echo ${{ secrets.GH_ACTIONS_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag ${{ secrets.DOCKER_USERNAME }}/multi-client ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-client
          docker tag ${{ secrets.DOCKER_USERNAME }}/multi-nginx ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-nginx
          docker tag ${{ secrets.DOCKER_USERNAME }}/multi-server ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-server
          docker tag ${{ secrets.DOCKER_USERNAME }}/multi-worker ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-worker
          docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-client
          docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-nginx
          docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-server
          docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/multi-worker

        # export CR_PAT=YOUR_TOKEN ; echo $CR_PAT | docker login ghcr.io -u USERNAME --password-stdin

  # DEPLOYMENT
      # - name: Install doctl
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      # - name: transfer files
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.DO_DROPLET_IP_ADD }}
      #     # host: ${{ secrets.DO_DROPLET_DOMAIN }}
      #     username: ${{ secrets.DO_DROPLET_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     passphrase: ${{ secrets.PASSPHRASE }}
      #     # password: ${{ secrets.PASSWORD }}
      #     # port: ${{ secrets.PORT }}
      #     source: "frontend/"
      #     target: "~/"
      # - name: run docker compose
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.DO_DROPLET_IP_ADD }}
      #     # host: ${{ secrets.DO_DROPLET_DOMAIN }}
      #     username: ${{ secrets.DO_DROPLET_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     passphrase: ${{ secrets.PASSPHRASE }}
      #     script: |
      #       cd ~/frontend
      #       docker compose down
      #       docker compose -f docker-compose.yml up -d --build
